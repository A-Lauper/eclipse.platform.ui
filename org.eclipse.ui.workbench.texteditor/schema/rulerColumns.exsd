<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui.workbench.texteditor">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.ui.workbench.texteditor" id="rulerColumns" name="Ruler Column"/>
      </appInfo>
      <documentation>
         Ruler column contributions are line based information areas shown at text editor sides.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="column"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="column">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
         <documentation>
            The specification of a ruler column contribution. Rulers without target specification are considered to target all editors and content types.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <choice minOccurs="1" maxOccurs="unbounded">
               <element ref="targetEditor"/>
               <element ref="targetContentType"/>
               <element ref="targetClass"/>
            </choice>
            <element ref="placement"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The unique id of the column. The id should be in the namespace of the contributing plug-in.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  An optional name of the column, may be used in the user interface (e.g. in preference pages).
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  An optional icon for the column. May be used in the user interface, for example on preference pages.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the column. Must extend &lt;code&gt;org.eclipse.ui.texteditor.rulers.RulerColumn&lt;/code&gt;. An abstract implementation exists in &lt;code&gt;org.eclipse.ui.texteditor.rulers.RulerColumn&lt;/code&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.ui.texteditor.rulers.RulerColumn"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="enabled" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  The default enablement state of this column.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="global" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Controls whether toggling the visibility of this column operates on all targeted editors, or only the active editor. If true, the ruler is added to all applicable editors when the user enables the column; if false, the ruler is only added to the active editor.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="includeInMenu" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Whether to include a &quot;Show/Hide&quot; menu entry for this column in the ruler context menu.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="targetEditor">
      <annotation>
         <documentation>
            Describes an editor that the column is contributed to.  See the &lt;tt&gt;org.eclipse.ui.editors&lt;/tt&gt; extension point. Note that the rulerColumn extension point is typically only supported by line based text editors.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The editor id of the target editor.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="targetContentType">
      <annotation>
         <documentation>
            Describes a content type that the column is contributed to. See the &lt;tt&gt;org.eclipse.core.runtime.contentTypes&lt;/tt&gt; extension point. Note that the rulerColumn extension point is typically only supported by line based text editors.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The id of the target content type.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="placement">
      <annotation>
         <documentation>
            Describes the placement of a contributed ruler column relative to other columns. A column may request to be placed &lt;em&gt;before&lt;/em&gt; or &lt;em&gt;after&lt;/em&gt; other known columns (identified by their id). If the ordering imposed by all &lt;tt&gt;rulerColumn&lt;/tt&gt; contributions is underspecified (i.e. there are multiple columns in the same slot), the columns are ordered by their location within their slot. If the ordering imposed by all &lt;tt&gt;rulerColumn&lt;/tt&gt; contributions is overspecified and there is no ordering that fulfills all placement requests, some placement requirements are automatically dropped. Columns with underspecified or no placement requests are placed at an arbitrary but consistent location.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <choice>
               <element ref="before"/>
               <element ref="after"/>
            </choice>
         </sequence>
         <attribute name="location" type="string" use="default" value="1.0">
            <annotation>
               <documentation>
                  The requested location within the ruler, a float number between 0.0 and 1.0. After all &lt;i&gt;before&lt;/i&gt; and &lt;i&gt;after&lt;/i&gt; constraints are evaluated, columns within one placement slot are ordered by the &lt;i&gt;location&lt;/i&gt; value. Columns with a lower location are placed further away from the editor area (leftwards in left-to-right environments), columns with a higher location are placed closer to the editor area (rightwards in left-to-right environments). By default, 1.0 is assumed.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="before">
      <annotation>
         <documentation>
            Requests placement before another column. The meaning of &lt;i&gt;before&lt;/i&gt; is similar to the SWT.LEAD flag: In left-to-right environments, &lt;i&gt;before&lt;/i&gt; means &lt;i&gt;to the left of&lt;/i&gt;, in right-to-left environments, it means &lt;i&gt;to the right of&lt;/i&gt;.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The id of another &lt;tt&gt;rulerColumn&lt;/tt&gt; contribution.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="after">
      <annotation>
         <documentation>
            Requests placement after another column. The meaning of &lt;i&gt;after&lt;/i&gt; is similar to the SWT.TRAIL flag: In left-to-right environments, &lt;i&gt;after&lt;/i&gt; means &lt;i&gt;to the right of&lt;/i&gt;, in right-to-left environments, it means &lt;i&gt;to the left of&lt;/i&gt;.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The id of another &lt;tt&gt;rulerColumn&lt;/tt&gt; contribution.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="targetClass">
      <annotation>
         <documentation>
            Describes an editor class that the column is contributed to. If &lt;code&gt;inherit&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, all subclasses of the specified class are also targeted by this colum contribution
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of a class implementing &lt;code&gt;org.eclipse.ui.texteditor.ITextEditor&lt;/code&gt;. The class does not need to be instantiatable. Note that contributing ruler columns to an internal editor class outside of the contributor&apos;s namespace is considered bad practice, as the class name may change without notice.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.ui.texteditor.ITextEditor"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="inherit" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  True to let all subclasses of the specified class inherit this ruler column contribution.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.3
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         &lt;b&gt;This API is provisional and may change any time before the 3.3 API freeze.&lt;/b&gt;

The extension point is supported by the &lt;tt&gt;org.eclipse.ui.texteditor.rulers&lt;/tt&gt; package. &lt;code&gt;RulerColumnRegistry&lt;/code&gt; gives access to all contributions, which in turn are described by &lt;code&gt;RulerColumnDescriptor&lt;/code&gt; instances. Editors that want to support the extension point should provide an adapter for &lt;code&gt;IColumnSupport&lt;/code&gt;. Subclasses of &lt;code&gt;AbstractDecoratedTextEditor&lt;/code&gt; support the extension point.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2006 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
