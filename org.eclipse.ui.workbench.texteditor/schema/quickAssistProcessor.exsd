<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui.workbench.texteditor">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.ui.workbench.texteditor" id="quickAssistProcessor" name="Quick Assist Processor"/>
      </appInfo>
      <documentation>
         &lt;br&gt;&lt;br&gt;
&lt;blink&gt;&lt;strong&gt;This extension point is not yet in use for M5. The implementation will be provided during M6.&lt;/strong&gt;&lt;/blink&gt;
&lt;br&gt;&lt;br&gt;

This extension point allows to add quick assist processors which can offer Quick Fixes for a given annotation type and Quick Assists for a given invocation context. A Quick Fix is a completion that can correct a problem reported and visible through an annotation (&lt;code&gt;Annotation&lt;/code&gt;) while a Quick Assist is not related to a problem or annotation. Since Quick Assists can be proposed where appropriate they are normally not visible in the viewer.
&lt;p&gt;
This extension point supports the &lt;code&gt;enablement&lt;/code&gt; tag. Variables available for testing are:
&lt;ul&gt;
&lt;li&gt;invocationContext: type IQuickAssistInvocationContext; the context in which quick assist or quick fix is requested&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <include schemaLocation="schema://org.eclipse.core.expressions/schema/expressionLanguage.exsd"/>

   <element name="extension">
      <complexType>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="provider">
      <complexType>
         <sequence>
            <element ref="enablement"/>
         </sequence>
         <attribute name="annotationType" type="string">
            <annotation>
               <documentation>
                  The annotation type for which this Quick Assist processor can provide quick fixes. If the annotation type is not specified then this processor can only provide quick assists but not quick fixes.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="activate" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  if the attribute is set to &quot;true&quot; it will force this plug-in to be loaded in order to collect quick assits and quick fixes.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="invocationContext" type="string" use="required">
            <annotation>
               <documentation>
                  Specifies the invocation context class. This processor will only be invoked if this context is available and can then cast the IQuickAssistInvocationContext to the given class to access the context information.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the class that implements this Quick Assist processor. The
class must be public and implement
&lt;samp&gt;org.eclipse.jface.text.quickassist.IQuickAssistProcessor&lt;/samp&gt;
with a public 0-argument constructor.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.text.quickassist.IQuickAssistProcessor"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Optional localized name of the Quick Assist processor.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.2
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2006 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
